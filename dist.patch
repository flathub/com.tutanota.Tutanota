diff --git a/buildSrc/DesktopBuilder.js b/buildSrc/DesktopBuilder.js
index 56e84c93..249b0b3c 100644
--- a/buildSrc/DesktopBuilder.js
+++ b/buildSrc/DesktopBuilder.js
@@ -104,11 +104,9 @@ function build(dirname, version, targets, updateUrl, nameSuffix) {
 					  )
 				  )
 			).then(() => Promise.all([
-				fs.removeAsync(path.join(distDir, '/installers/')),
 				fs.removeAsync(path.join(distDir, '/node_modules/')),
 				fs.removeAsync(path.join(distDir, '/cache.json')),
 				fs.removeAsync(path.join(distDir, '/package.json')),
-				fs.removeAsync(path.join(distDir, '/package-lock.json')),
 				fs.removeAsync(path.join(distDir, '/src/')),
 			]))
 		})
diff --git a/buildSrc/electron-package-json-template.js b/buildSrc/electron-package-json-template.js
index 602b39b2..22f81eaf 100644
--- a/buildSrc/electron-package-json-template.js
+++ b/buildSrc/electron-package-json-template.js
@@ -39,7 +39,8 @@ module.exports = function (nameSuffix, version, targetUrl, iconPath, sign) {
			"node-forge": pj.devDependencies["node-forge"],
			"winreg": pj.devDependencies.winreg,
 		},
-		"build": {
+	        "build": {
+                        "npmArgs": ["--cache=/run/build/tutanota/npm-cache"],
			"electronVersion": pj.devDependencies.electron,
 			"icon": iconPath,
@@ -112,8 +113,8 @@ module.exports = function (nameSuffix, version, targetUrl, iconPath, sign) {
				},
				"target": [
					{
-						"target": unpacked ? "dir" : "AppImage",
-						"arch": "x64"
+						"target": "dir",
+						"arch": (process.arch == "arm")?"armv7l":process.arch
					}
				]
			}
 				]
 			}
diff --git a/dist.js b/dist.js
index a60e1020..1b0b9cb0 100644
--- a/dist.js
+++ b/dist.js
@@ -90,8 +90,7 @@ function measure() {
 }
 
 function clean() {
-	return fs.removeAsync("build")
-	         .then(() => fs.ensureDirAsync(DistDir + "/translations"))
+	return fs.ensureDirAsync(DistDir + "/translations")
 }
 
 function buildWebapp() {
@@ -177,10 +176,6 @@ function buildDesktopClient() {
 		if (options.stage === "release") {
 			return createHtml(env.create(SystemConfig.distRuntimeConfig(bundles), "https://mail.tutanota.com", version, "Desktop", true), bundles)
-				buildPromise.then(() => createHtml(env.create(SystemConfig.distRuntimeConfig(bundles), "https://test.tutanota.com", version, "Desktop", true), bundles))
		} else if (options.stage === "local") {
			const desktopLocalOpts = Object.assign({}, desktopBaseOpts, {
				version: `${new Date().getTime()}.0.0`,
